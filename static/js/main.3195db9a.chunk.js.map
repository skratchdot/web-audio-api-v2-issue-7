{"version":3,"sources":["app.module.css","analyser-chart.module.css","col.module.css","row.module.css","analyser-chart.js","buttons.js","col.js","pulse-width-chart.js","range.js","row.js","app.js","index.js"],"names":["module","exports","AnalyserChart","analyser","chartType","useState","viewBox","setViewBox","d","setD","drawRef","React","useRef","draw","data","Float32Array","fftSize","getFloatTimeDomainData","frequencyBinCount","getFloatFrequencyData","reduce","prev","curr","index","current","requestAnimationFrame","useLayoutEffect","cancelAnimationFrame","useEffect","preserveAspectRatio","className","styles","stroke","Buttons","playType","choices","setPlayType","map","choice","key","disabled","onClick","Col","children","PulseWidthChart","numCycles","pulseWidth","len","cycle","i","val","Range","presets","setter","props","name","value","type","onChange","e","parseFloat","target","preset","style","marginBottom","Row","WAVETABLE_LENGTH","Math","pow","TYPES","ac","AudioContext","gainMain","GainNode","gain","connect","destination","oscSquare","OscillatorNode","detune","frequency","analyserSquare","AnalyserNode","smoothingTimeConstant","gainSquare","start","oscWorklet","gainWorklet","analyserWorklet","oscCustom","analyserCustom","gainCustom","App","setFrequency","setDetune","setPulseWidth","setGain","workletLoaded","setWorkletLoaded","workletError","setWorkletError","updatePeriodicWave","pulsePoint","wavetable","fft","FFT","length","forward","wave","createPeriodicWave","real","imag","disableNormalization","setPeriodicWave","setValueAtTime","currentTime","parameters","get","state","resume","suspend","audioWorklet","addModule","then","AudioWorkletNode","catch","err","console","error","min","max","step","href","packageName","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3195db9a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"app_App__3ALCk\",\"Loading\":\"app_Loading__ylwSY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"svg\":\"analyser-chart_svg__2S828\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Col\":\"col_Col__1zaJG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Row\":\"row_Row__2P6i2\"};","import React, { useEffect, useState, useLayoutEffect } from 'react';\nimport * as styles from './analyser-chart.module.css';\n\nconst AnalyserChart = ({ analyser, chartType }) => {\n  const [viewBox, setViewBox] = useState();\n  const [d, setD] = useState('');\n  const drawRef = React.useRef();\n\n  const draw = () => {\n    if (analyser) {\n      let data;\n      if (chartType === 'waveform') {\n        data = new Float32Array(analyser.fftSize);\n        analyser.getFloatTimeDomainData(data);\n      } else if (chartType === 'fft') {\n        data = new Float32Array(analyser.frequencyBinCount);\n        analyser.getFloatFrequencyData(data);\n      }\n      if (data) {\n        const d = data.reduce(\n          (prev, curr, index) => `${prev} M${index},0 L${index},${curr}`,\n          ''\n        );\n        setD(d);\n      }\n    }\n    drawRef.current = requestAnimationFrame(draw);\n  };\n\n  useLayoutEffect(() => {\n    drawRef.current = requestAnimationFrame(draw);\n    return () => cancelAnimationFrame(drawRef.current);\n  }, []); // eslint-disable-line\n\n  useEffect(() => {\n    if (analyser) {\n      if (chartType === 'waveform') {\n        setViewBox(`0 -1 ${analyser.fftSize} 2`);\n      } else if (chartType === 'fft') {\n        setViewBox(`0 -120 ${analyser.frequencyBinCount} 120`);\n      }\n    }\n  }, [analyser, chartType]);\n\n  return (\n    <svg preserveAspectRatio=\"none\" className={styles.svg} viewBox={viewBox}>\n      <path stroke=\"black\" d={d} />\n    </svg>\n  );\n};\n\nexport default AnalyserChart;\n","import React from 'react';\n\nconst Buttons = ({ playType, choices, setPlayType }) => {\n  return (\n    <div>\n      audio output:\n      <br />\n      {choices.map((choice) => (\n        <button\n          key={choice}\n          disabled={choice === playType}\n          onClick={() => setPlayType(choice)}\n        >\n          {choice}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nexport default Buttons;\n","import React from 'react';\nimport * as styles from './col.module.css';\n\nconst Col = ({ children }) => <div className={styles.Col}>{children}</div>;\n\nexport default Col;\n","import React from 'react';\nimport * as styles from './analyser-chart.module.css';\n\nconst PulseWidthChart = ({ numCycles, pulseWidth }) => {\n  let d = '';\n  const pointsPerCycle = 100;\n  const len = numCycles * pointsPerCycle;\n  for (let cycle = 0; cycle < numCycles; cycle++) {\n    for (let i = 0; i < pointsPerCycle; i++) {\n      const val = i / pointsPerCycle < pulseWidth ? -1 : 1;\n      const index = cycle * pointsPerCycle + i;\n      d += `M${index},0 L${index},${val}`;\n    }\n  }\n  return (\n    <svg\n      className={styles.svg}\n      preserveAspectRatio=\"none\"\n      viewBox={`0 -1 ${len} 2`}\n    >\n      <path stroke=\"black\" d={d} />\n    </svg>\n  );\n};\n\nexport default PulseWidthChart;\n","import React from 'react';\n\nconst Range = ({ presets, setter, ...props }) => {\n  return (\n    <div>\n      {props.name}:&nbsp;\n      <small>{props.value}</small>\n      <br />\n      <input\n        {...props}\n        type=\"range\"\n        onChange={(e) => setter(parseFloat(e.target.value))}\n      />\n      <br />\n      {(presets || []).map((preset) => (\n        <button\n          key={preset}\n          disabled={props.value === preset}\n          onClick={() => setter(preset)}\n          style={{ marginBottom: 10 }}\n        >\n          {preset}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nexport default Range;\n","import React from 'react';\nimport * as styles from './row.module.css';\n\nconst Row = ({ children }) => <div className={styles.Row}>{children}</div>;\nexport default Row;\n","import React, { useState, useEffect } from 'react';\nimport { FFT } from 'dsp.js';\nimport AnalyserChart from './analyser-chart';\nimport Buttons from './buttons';\nimport Col from './col';\nimport GithubCorner from 'react-github-corner';\nimport PulseWidthChart from './pulse-width-chart';\nimport Range from './range';\nimport Row from './row';\nimport * as styles from './app.module.css';\nimport { name as packageName } from '../package.json';\n\n// defaults\nconst DEFAULT_FREQUENCY = 440;\nconst DEFAULT_DETUNE = 0;\nconst DEFAULT_PULSE_WITDH = 0.5;\nconst DEFAULT_GAIN = 0;\nconst WAVETABLE_LENGTH = Math.pow(2, 12);\nconst TYPES = {\n  STOPPED: 'stopped',\n  WORKLET: 'worklet',\n  CUSTOM: 'custom',\n  SQUARE: 'square',\n};\n\n// setup audio graph\nconst ac = new AudioContext();\n\n// main gain\nconst gainMain = new GainNode(ac, { gain: DEFAULT_GAIN });\ngainMain.connect(ac.destination);\n\n// square\nconst oscSquare = new OscillatorNode(ac, {\n  detune: DEFAULT_DETUNE,\n  frequency: DEFAULT_FREQUENCY,\n  type: 'square',\n});\nconst analyserSquare = new AnalyserNode(ac, { smoothingTimeConstant: 0 });\nconst gainSquare = new GainNode(ac, { gain: 0 });\noscSquare.connect(gainSquare);\ngainSquare.connect(gainMain);\noscSquare.connect(analyserSquare);\noscSquare.start();\n\n// custom\nconst oscCustom = new OscillatorNode(ac, {\n  detune: DEFAULT_DETUNE,\n  frequency: DEFAULT_FREQUENCY,\n});\nconst analyserCustom = new AnalyserNode(ac, { smoothingTimeConstant: 0 });\nconst gainCustom = new GainNode(ac, { gain: 0 });\noscCustom.connect(gainCustom);\ngainCustom.connect(gainMain);\noscCustom.connect(analyserCustom);\noscCustom.start();\n\n// worklet variables will be populated inside our App component\nlet oscWorklet, gainWorklet, analyserWorklet;\n\nconst App = () => {\n  // settings\n  const [frequency, setFrequency] = useState(DEFAULT_FREQUENCY);\n  const [detune, setDetune] = useState(DEFAULT_DETUNE);\n  const [pulseWidth, setPulseWidth] = useState(DEFAULT_PULSE_WITDH);\n  const [gain, setGain] = useState(DEFAULT_GAIN);\n  const [playType, setPlayType] = useState(TYPES.STOPPED);\n  const [workletLoaded, setWorkletLoaded] = useState(false);\n  const [workletError, setWorkletError] = useState();\n\n  const updatePeriodicWave = () => {\n    // set periodic wave\n    const pulsePoint = WAVETABLE_LENGTH * pulseWidth;\n    const wavetable = [];\n    for (let i = 0; i < WAVETABLE_LENGTH; i++) {\n      wavetable[i] = i < pulsePoint ? -1 : 1;\n    }\n    var fft = new FFT(wavetable.length);\n    fft.forward(wavetable);\n    const wave = ac.createPeriodicWave(\n      new Float32Array(fft.real),\n      new Float32Array(fft.imag),\n      { disableNormalization: false }\n    );\n    oscCustom.setPeriodicWave(wave);\n  };\n\n  useEffect(() => {\n    oscCustom.frequency.setValueAtTime(frequency, ac.currentTime);\n    oscSquare.frequency.setValueAtTime(frequency, ac.currentTime);\n    oscWorklet &&\n      oscWorklet.parameters\n        .get('frequency')\n        .setValueAtTime(frequency, ac.currentTime);\n  }, [frequency]);\n\n  useEffect(() => {\n    oscCustom.detune.setValueAtTime(detune, ac.currentTime);\n    oscSquare.detune.setValueAtTime(detune, ac.currentTime);\n    oscWorklet &&\n      oscWorklet.parameters\n        .get('detune')\n        .setValueAtTime(detune, ac.currentTime);\n  }, [detune]);\n\n  useEffect(() => {\n    updatePeriodicWave();\n    oscWorklet &&\n      oscWorklet.parameters\n        .get('pulseWidth')\n        .setValueAtTime(pulseWidth, ac.currentTime);\n  }, [pulseWidth]); // eslint-disable-line\n\n  useEffect(() => {\n    gainMain.gain.value = gain;\n  }, [gain]);\n\n  useEffect(() => {\n    if (playType !== TYPES.STOPPED && ac.state === 'suspended') {\n      ac.resume();\n    }\n    if (playType === TYPES.STOPPED) {\n      ac.suspend();\n    } else if (playType === TYPES.WORKLET) {\n      gainCustom.gain.setValueAtTime(0, ac.currentTime);\n      gainSquare.gain.setValueAtTime(0, ac.currentTime);\n      gainWorklet && gainWorklet.gain.setValueAtTime(1, ac.currentTime);\n    } else if (playType === TYPES.CUSTOM) {\n      updatePeriodicWave();\n      gainCustom.gain.setValueAtTime(1, ac.currentTime);\n      gainSquare.gain.setValueAtTime(0, ac.currentTime);\n      gainWorklet && gainWorklet.gain.setValueAtTime(0, ac.currentTime);\n    } else if (playType === TYPES.SQUARE) {\n      gainCustom.gain.setValueAtTime(0, ac.currentTime);\n      gainSquare.gain.setValueAtTime(1, ac.currentTime);\n      gainWorklet && gainWorklet.gain.setValueAtTime(0, ac.currentTime);\n    }\n  }, [playType]); // eslint-disable-line\n\n  useEffect(() => {\n    ac.audioWorklet\n      .addModule('pulse-oscillator.js')\n      .then(() => {\n        oscWorklet = new AudioWorkletNode(ac, 'pulse-oscillator');\n        analyserWorklet = new AnalyserNode(ac, { smoothingTimeConstant: 0 });\n        gainWorklet = new GainNode(ac, { gain: 0 });\n        oscWorklet.connect(analyserWorklet);\n        oscWorklet.connect(gainWorklet);\n        gainWorklet.connect(gainMain);\n        setWorkletLoaded(true);\n      })\n      .catch((err) => {\n        console.error(err);\n        setWorkletError(err);\n      });\n  }, []);\n\n  if (workletError) {\n    return (\n      <div className={styles.Loading}>\n        an error occured while loading the worklet: {workletError}\n      </div>\n    );\n  }\n\n  if (!workletLoaded) {\n    return <div className={styles.Loading}>loading worklet...</div>;\n  }\n\n  return (\n    <div className={styles.App}>\n      <Row>\n        <Col>\n          <h2>App Settings</h2>\n          <Range\n            name=\"gain\"\n            value={gain}\n            min={0}\n            max={1}\n            step={0.001}\n            setter={setGain}\n            presets={[0, 0.3, 0.5, 0.8, 1]}\n          />\n          <Buttons\n            playType={playType}\n            choices={[TYPES.STOPPED, TYPES.WORKLET, TYPES.CUSTOM, TYPES.SQUARE]}\n            setPlayType={setPlayType}\n          />\n\n          <h2>Pulse Oscillator Settings</h2>\n          <Range\n            name=\"frequency\"\n            value={frequency}\n            min={-2000}\n            max={2000}\n            step={1}\n            setter={setFrequency}\n            presets={[\n              -2000,\n              -880,\n              -440,\n              -220,\n              -110,\n              -55,\n              0,\n              55,\n              110,\n              220,\n              440,\n              880,\n              2000,\n            ]}\n          />\n          <Range\n            name=\"detune\"\n            value={detune}\n            min={-2400}\n            max={2400}\n            step={1}\n            setter={setDetune}\n            presets={[-2400, -1200, -600, 0, 600, 1200, 2400]}\n          />\n          <Range\n            name=\"pulseWidth\"\n            value={pulseWidth}\n            min={0}\n            max={1}\n            step={0.001}\n            setter={setPulseWidth}\n            presets={[0, 0.01, 0.25, 0.5, 0.75, 0.99, 1]}\n          />\n          <br />\n          <PulseWidthChart pulseWidth={pulseWidth} numCycles={5} />\n        </Col>\n        <Col className={styles.Col}>\n          <h2>Visualizations</h2>\n          <h3>worker</h3>\n          <Row>\n            <Col>\n              <AnalyserChart analyser={analyserWorklet} chartType=\"waveform\" />\n            </Col>\n            <Col>\n              <AnalyserChart analyser={analyserWorklet} chartType=\"fft\" />\n            </Col>\n          </Row>\n          <h3>custom</h3>\n          <Row>\n            <Col>\n              <AnalyserChart analyser={analyserCustom} chartType=\"waveform\" />\n            </Col>\n            <Col>\n              <AnalyserChart analyser={analyserCustom} chartType=\"fft\" />\n            </Col>\n          </Row>\n          <h3>square</h3>\n          <Row>\n            <Col>\n              <AnalyserChart analyser={analyserSquare} chartType=\"waveform\" />\n            </Col>\n            <Col>\n              <AnalyserChart analyser={analyserSquare} chartType=\"fft\" />\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n      <GithubCorner href={`https://github.com/skratchdot/${packageName}`} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}