{"version":3,"sources":["analyser-chart.module.css","demo-2.module.css","demo-1.module.css","col.module.css","row.module.css","app.module.css","col.js","row.js","analyser-chart.js","buttons.js","pulse-width-chart.js","range.js","demo-1.js","demo-2.js","app.js","index.js"],"names":["module","exports","Col","children","props","className","styles","Row","AnalyserChart","analyser","chartType","useState","viewBox","setViewBox","d","setD","drawRef","React","useRef","draw","data","min","max","Float32Array","fftSize","getFloatTimeDomainData","frequencyBinCount","getFloatFrequencyData","reduce","prev","curr","index","val","Number","isFinite","current","requestAnimationFrame","useLayoutEffect","cancelAnimationFrame","useEffect","WAVEFORM_MAX","FFT_MAX","preserveAspectRatio","Buttons","playType","choices","setPlayType","map","choice","key","disabled","onClick","PulseWidthChart","numCycles","pulseWidth","len","cycle","i","stroke","Range","presets","setter","name","value","type","onChange","e","parseFloat","target","preset","style","marginBottom","WAVETABLE_LENGTH","Math","pow","TYPES","Demo1","frequency","setFrequency","detune","setDetune","setPulseWidth","gain","setGain","workletLoaded","setWorkletLoaded","workletError","setWorkletError","ac","AudioContext","gainMain","GainNode","gainSquare","gainCustom","oscSquare","OscillatorNode","oscCustom","analyserSquare","AnalyserNode","smoothingTimeConstant","analyserCustom","connect","destination","start","gainWorklet","oscWorklet","analyserWorklet","setAudioGraph","updatePeriodicWave","pulsePoint","wavetable","fft","FFT","length","forward","wave","createPeriodicWave","real","imag","disableNormalization","setPeriodicWave","setValueAtTime","currentTime","parameters","get","state","resume","suspend","a","audioWorklet","addModule","AudioWorkletNode","console","error","message","close","step","Demo2","contextRef","analyserRef","analyserLfoRef","gainRef","context","lfoOsc","lfoConstant","ConstantSourceNode","lfoGain","pulse","margin","padding","App","demo","demoName","setDemoName","packageName","alignSelf","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f70c59a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"svg\":\"analyser-chart_svg__2S828\",\"path\":\"analyser-chart_path__34OOx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pre\":\"demo-2_pre__2_gw9\",\"code\":\"demo-2_code__3ESEA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loading\":\"demo-1_Loading__JbyOo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Col\":\"col_Col__1zaJG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Row\":\"row_Row__2P6i2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"app_App__3ALCk\"};","import React from 'react';\nimport * as styles from './col.module.css';\n\nconst Col = ({ children, ...props }) => (\n  <div {...props} className={styles.Col}>\n    {children}\n  </div>\n);\n\nexport default Col;\n","import React from 'react';\nimport * as styles from './row.module.css';\n\nconst Row = ({ children, ...props }) => (\n  <div {...props} className={styles.Row}>\n    {children}\n  </div>\n);\nexport default Row;\n","import React, { useEffect, useState, useLayoutEffect } from 'react';\nimport * as styles from './analyser-chart.module.css';\n\nconst WAVEFORM_MIN = -1;\nconst WAVEFORM_MAX = 1;\nconst FFT_MIN = -120;\nconst FFT_MAX = 0;\n\nconst AnalyserChart = ({ analyser, chartType }) => {\n  const [viewBox, setViewBox] = useState();\n  const [d, setD] = useState('');\n  const drawRef = React.useRef();\n\n  const draw = () => {\n    if (analyser) {\n      let data;\n      let min;\n      let max;\n      if (chartType === 'waveform') {\n        data = new Float32Array(analyser.fftSize);\n        analyser.getFloatTimeDomainData(data);\n        min = WAVEFORM_MIN;\n        max = WAVEFORM_MAX;\n      } else if (chartType === 'fft') {\n        data = new Float32Array(analyser.frequencyBinCount);\n        analyser.getFloatFrequencyData(data);\n        min = FFT_MIN;\n        max = FFT_MAX;\n      }\n      if (data) {\n        const d = data.reduce(\n          (prev, curr, index) => {\n            let val = curr;\n            if (val < min) {\n              val = min;\n            } else if (val > max) {\n              val = max;\n            } else if (!Number.isFinite(val)) {\n              val = 0;\n            }\n            return `${prev} M${index},0 L${index},${val}`;\n          },\n          ''\n        );\n        setD(d);\n      }\n    }\n    drawRef.current = requestAnimationFrame(draw);\n  };\n\n  useLayoutEffect(() => {\n    drawRef.current = requestAnimationFrame(draw);\n    return () => cancelAnimationFrame(drawRef.current);\n  }, []); // eslint-disable-line\n\n  useEffect(() => {\n    if (analyser) {\n      if (chartType === 'waveform') {\n        setViewBox(`0 ${WAVEFORM_MIN} ${analyser.fftSize} ${WAVEFORM_MAX - WAVEFORM_MIN}`);\n      } else if (chartType === 'fft') {\n        setViewBox(`0 ${FFT_MIN} ${analyser.frequencyBinCount} ${FFT_MAX - FFT_MIN}`);\n      }\n    }\n  }, [analyser, chartType]);\n\n  return (\n    <svg preserveAspectRatio=\"none\" className={styles.svg} viewBox={viewBox}>\n      <path d={d} className={styles.path} />\n    </svg>\n  );\n};\n\nexport default AnalyserChart;\n","import React from 'react';\n\nconst Buttons = ({ playType, choices, setPlayType }) => {\n  return (\n    <div>\n      audio output:\n      <br />\n      {choices.map((choice) => (\n        <button\n          key={choice}\n          disabled={choice === playType}\n          onClick={() => setPlayType(choice)}\n        >\n          {choice}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nexport default Buttons;\n","import React from 'react';\nimport * as styles from './analyser-chart.module.css';\n\nconst PulseWidthChart = ({ numCycles, pulseWidth }) => {\n  let d = '';\n  const pointsPerCycle = 100;\n  const len = numCycles * pointsPerCycle;\n  for (let cycle = 0; cycle < numCycles; cycle++) {\n    for (let i = 0; i < pointsPerCycle; i++) {\n      const val = i / pointsPerCycle < pulseWidth ? -1 : 1;\n      const index = cycle * pointsPerCycle + i;\n      d += `M${index},0 L${index},${val}`;\n    }\n  }\n  return (\n    <svg\n      className={styles.svg}\n      preserveAspectRatio=\"none\"\n      viewBox={`0 -1 ${len} 2`}\n    >\n      <path stroke=\"black\" d={d} />\n    </svg>\n  );\n};\n\nexport default PulseWidthChart;\n","import React from 'react';\n\nconst Range = ({ presets, setter, ...props }) => {\n  return (\n    <div>\n      {props.name}:&nbsp;\n      <small>{props.value}</small>\n      <br />\n      <input\n        {...props}\n        type=\"range\"\n        onChange={(e) => setter(parseFloat(e.target.value))}\n      />\n      <br />\n      {(presets || []).map((preset) => (\n        <button\n          key={preset}\n          disabled={props.value === preset}\n          onClick={() => setter(preset)}\n          style={{ marginBottom: 10 }}\n        >\n          {preset}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nexport default Range;\n","import React, { useState, useEffect } from 'react';\nimport { FFT } from 'dsp.js';\nimport AnalyserChart from './analyser-chart';\nimport Buttons from './buttons';\nimport Col from './col';\nimport PulseWidthChart from './pulse-width-chart';\nimport Range from './range';\nimport Row from './row';\nimport * as styles from './demo-1.module.css';\n\n// defaults\nconst DEFAULT_FREQUENCY = 440;\nconst DEFAULT_DETUNE = 0;\nconst DEFAULT_PULSE_WITDH = 0.5;\nconst DEFAULT_GAIN = 0;\nconst WAVETABLE_LENGTH = Math.pow(2, 12);\nconst TYPES = {\n  STOPPED: 'stopped',\n  WORKLET: 'worklet',\n  CUSTOM: 'custom',\n  SQUARE: 'square',\n};\n\nconst Demo1 = () => {\n  // settings\n  const [frequency, setFrequency] = useState(DEFAULT_FREQUENCY);\n  const [detune, setDetune] = useState(DEFAULT_DETUNE);\n  const [pulseWidth, setPulseWidth] = useState(DEFAULT_PULSE_WITDH);\n  const [gain, setGain] = useState(DEFAULT_GAIN);\n  const [playType, setPlayType] = useState(TYPES.STOPPED);\n  const [workletLoaded, setWorkletLoaded] = useState(false);\n  const [workletError, setWorkletError] = useState();\n  // build audio graph\n  const [\n    {\n      ac,\n      gainMain,\n      gainSquare,\n      gainCustom,\n      gainWorklet,\n      oscSquare,\n      oscCustom,\n      oscWorklet,\n      analyserSquare,\n      analyserCustom,\n      analyserWorklet,\n    },\n    setAudioGraph\n  ] = useState(() => {\n    // context\n    const ac = new AudioContext();\n    // gains\n    const gainMain = new GainNode(ac, { gain: DEFAULT_GAIN });\n    const gainSquare = new GainNode(ac, { gain: 0 });\n    const gainCustom = new GainNode(ac, { gain: 0 });\n    let gainWorklet;\n    // osc\n    const oscSquare = new OscillatorNode(ac, {\n      detune: DEFAULT_DETUNE,\n      frequency: DEFAULT_FREQUENCY,\n      type: 'square',\n    });\n    const oscCustom = new OscillatorNode(ac, {\n      detune: DEFAULT_DETUNE,\n      frequency: DEFAULT_FREQUENCY,\n    });\n    let oscWorklet;\n    // analysers\n    const analyserSquare = new AnalyserNode(ac, { smoothingTimeConstant: 0 });\n    const analyserCustom = new AnalyserNode(ac, { smoothingTimeConstant: 0 });\n    let analyserWorklet;\n\n    // connect nodes\n    gainMain.connect(ac.destination);\n    oscSquare.connect(gainSquare);\n    gainSquare.connect(gainMain);\n    oscSquare.connect(analyserSquare);\n    oscSquare.start();\n\n    oscCustom.connect(gainCustom);\n    gainCustom.connect(gainMain);\n    oscCustom.connect(analyserCustom);\n    oscCustom.start();\n    return {\n      ac,\n      gainMain,\n      gainSquare,\n      gainCustom,\n      gainWorklet,\n      oscSquare,\n      oscCustom,\n      oscWorklet,\n      analyserSquare,\n      analyserCustom,\n      analyserWorklet,\n    };\n  });\n\n  const updatePeriodicWave = () => {\n    // set periodic wave\n    const pulsePoint = WAVETABLE_LENGTH * pulseWidth;\n    const wavetable = [];\n    for (let i = 0; i < WAVETABLE_LENGTH; i++) {\n      wavetable[i] = i < pulsePoint ? -1 : 1;\n    }\n    var fft = new FFT(wavetable.length);\n    fft.forward(wavetable);\n    const wave = ac.createPeriodicWave(\n      new Float32Array(fft.real),\n      new Float32Array(fft.imag),\n      { disableNormalization: false }\n    );\n    oscCustom.setPeriodicWave(wave);\n  };\n\n  useEffect(() => {\n    oscCustom.frequency.setValueAtTime(frequency, ac.currentTime);\n    oscSquare.frequency.setValueAtTime(frequency, ac.currentTime);\n    oscWorklet &&\n      oscWorklet.parameters\n        .get('frequency')\n        .setValueAtTime(frequency, ac.currentTime);\n  }, [frequency]);\n\n  useEffect(() => {\n    oscCustom.detune.setValueAtTime(detune, ac.currentTime);\n    oscSquare.detune.setValueAtTime(detune, ac.currentTime);\n    oscWorklet &&\n      oscWorklet.parameters\n        .get('detune')\n        .setValueAtTime(detune, ac.currentTime);\n  }, [detune]);\n\n  useEffect(() => {\n    updatePeriodicWave();\n    oscWorklet &&\n      oscWorklet.parameters\n        .get('pulseWidth')\n        .setValueAtTime(pulseWidth, ac.currentTime);\n  }, [pulseWidth]);\n\n  useEffect(() => {\n    gainMain.gain.value = gain;\n  }, [gain]);\n\n  useEffect(() => {\n    if (playType !== TYPES.STOPPED && ac.state === 'suspended') {\n      ac.resume();\n    }\n    if (playType === TYPES.STOPPED) {\n      ac.suspend();\n    } else if (playType === TYPES.WORKLET) {\n      gainCustom.gain.setValueAtTime(0, ac.currentTime);\n      gainSquare.gain.setValueAtTime(0, ac.currentTime);\n      gainWorklet && gainWorklet.gain.setValueAtTime(1, ac.currentTime);\n    } else if (playType === TYPES.CUSTOM) {\n      updatePeriodicWave();\n      gainCustom.gain.setValueAtTime(1, ac.currentTime);\n      gainSquare.gain.setValueAtTime(0, ac.currentTime);\n      gainWorklet && gainWorklet.gain.setValueAtTime(0, ac.currentTime);\n    } else if (playType === TYPES.SQUARE) {\n      gainCustom.gain.setValueAtTime(0, ac.currentTime);\n      gainSquare.gain.setValueAtTime(1, ac.currentTime);\n      gainWorklet && gainWorklet.gain.setValueAtTime(0, ac.currentTime);\n    }\n  }, [playType]);\n\n  // setup worklet onload, and destroy context on unload\n  useEffect(() => {\n    // setup worklet\n    (async () => {\n      try {\n        await ac.audioWorklet.addModule('pulse-oscillator.js');\n        const oscWorklet = new AudioWorkletNode(ac, 'pulse-oscillator');\n        const analyserWorklet = new AnalyserNode(ac, { smoothingTimeConstant: 0 });\n        const gainWorklet = new GainNode(ac, { gain: 0 });\n        oscWorklet.connect(analyserWorklet);\n        oscWorklet.connect(gainWorklet);\n        gainWorklet.connect(gainMain);\n        setAudioGraph((state) => ({\n          ...state,\n          oscWorklet,\n          analyserWorklet,\n          gainWorklet\n        }));\n        setWorkletLoaded(true);\n      } catch (err) {\n        console.error(err);\n        setWorkletError(err.message);\n      }\n    })();\n\n    // destroy context\n    return () => {\n      ac.close();\n    };\n  }, []);\n\n  if (workletError) {\n    return (\n      <div className={styles.Loading}>\n        an error occured while loading the worklet: {workletError}\n      </div>\n    );\n  }\n\n  if (!workletLoaded) {\n    return <div className={styles.Loading}>loading worklet...</div>;\n  }\n\n  return (\n    <Row>\n      <Col>\n        <h2>App Settings</h2>\n        <Range\n          name=\"gain\"\n          value={gain}\n          min={0}\n          max={1}\n          step={0.001}\n          setter={setGain}\n          presets={[0, 0.3, 0.5, 0.8, 1]}\n        />\n        <Buttons\n          playType={playType}\n          choices={[TYPES.STOPPED, TYPES.WORKLET, TYPES.CUSTOM, TYPES.SQUARE]}\n          setPlayType={setPlayType}\n        />\n\n        <h2>Pulse Oscillator Settings</h2>\n        <Range\n          name=\"frequency\"\n          value={frequency}\n          min={-2000}\n          max={2000}\n          step={1}\n          setter={setFrequency}\n          presets={[\n            -2000,\n            -880,\n            -440,\n            -220,\n            -110,\n            -55,\n            0,\n            55,\n            110,\n            220,\n            440,\n            880,\n            2000,\n          ]}\n        />\n        <Range\n          name=\"detune\"\n          value={detune}\n          min={-2400}\n          max={2400}\n          step={1}\n          setter={setDetune}\n          presets={[-2400, -1200, -600, 0, 600, 1200, 2400]}\n        />\n        <Range\n          name=\"pulseWidth\"\n          value={pulseWidth}\n          min={0}\n          max={1}\n          step={0.001}\n          setter={setPulseWidth}\n          presets={[0, 0.01, 0.25, 0.5, 0.75, 0.99, 1]}\n        />\n        <br />\n        <PulseWidthChart pulseWidth={pulseWidth} numCycles={5} />\n      </Col>\n      <Col className={styles.Col}>\n        <h2>Visualizations</h2>\n        <h3>worklet</h3>\n        <Row>\n          <Col>\n            <AnalyserChart analyser={analyserWorklet} chartType=\"waveform\" />\n          </Col>\n          <Col>\n            <AnalyserChart analyser={analyserWorklet} chartType=\"fft\" />\n          </Col>\n        </Row>\n        <h3>custom</h3>\n        <Row>\n          <Col>\n            <AnalyserChart analyser={analyserCustom} chartType=\"waveform\" />\n          </Col>\n          <Col>\n            <AnalyserChart analyser={analyserCustom} chartType=\"fft\" />\n          </Col>\n        </Row>\n        <h3>square</h3>\n        <Row>\n          <Col>\n            <AnalyserChart analyser={analyserSquare} chartType=\"waveform\" />\n          </Col>\n          <Col>\n            <AnalyserChart analyser={analyserSquare} chartType=\"fft\" />\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Demo1;\n","import React, { useState, useEffect, useRef } from 'react';\nimport AnalyserChart from './analyser-chart';\nimport Col from './col';\nimport Range from './range';\nimport Row from './row';\nimport * as styles from './demo-2.module.css';\n\nconst Demo2 = () => {\n  const contextRef = useRef();\n  const analyserRef = useRef();\n  const analyserLfoRef = useRef();\n  const gainRef = useRef();\n  const [workletLoaded, setWorkletLoaded] = useState(false);\n  const [workletError, setWorkletError] = useState();\n  const [gain, setGain] = useState(0);\n  const scCode = `{ Pulse.ar(200, SinOsc.ar(0.5).range(0, 1)) }.play`;\n\n  useEffect(() => {\n    if (gainRef.current && contextRef.current) {\n      gainRef.current.gain.setValueAtTime(gain, contextRef.current.currentTime);\n    }\n  }, [gain]);\n\n  useEffect(() => {\n    const context = new AudioContext();\n    (async () => {\n      try {\n        await context.audioWorklet.addModule('pulse-oscillator.js');\n        analyserRef.current = new AnalyserNode(context, { smoothingTimeConstant: 0 });\n        analyserLfoRef.current = new AnalyserNode(context, { smoothingTimeConstant: 0 });\n        gainRef.current = new GainNode(context, { gain: 0 });\n\n        // create lfo (oscillates between 0-1 at 0.2 freq)\n        const lfoOsc = new OscillatorNode(context, { frequency: 0.5 });\n        const lfoConstant = new ConstantSourceNode(context);\n        const lfoGain = new GainNode(context, { gain: 0.5 });\n\n        // create pulse\n        const pulse = new AudioWorkletNode(context, 'pulse-oscillator');\n        pulse.parameters\n          .get('frequency')\n          .setValueAtTime(200, context.currentTime);\n\n        // connect nodes\n        lfoOsc.connect(lfoGain);\n        lfoConstant.connect(lfoGain);\n        pulse.connect(analyserRef.current);\n        pulse.connect(gainRef.current);\n        gainRef.current.connect(context.destination);\n\n        // start nodes\n        lfoOsc.start();\n        lfoConstant.start();\n        lfoGain.connect(pulse.parameters.get('pulseWidth'));\n        lfoGain.connect(analyserLfoRef.current);\n\n        setWorkletLoaded(true);\n      } catch (err) {\n        console.error(err);\n        setWorkletError(err.message);\n      }\n    })();\n    contextRef.current = context;\n    return () => {\n      contextRef.current.close();\n    };\n  }, []);\n\n  if (workletError) {\n    return (\n      <div className={styles.Loading}>\n        an error occured while loading the worklet: {workletError}\n      </div>\n    );\n  }\n\n  if (!workletLoaded) {\n    return <div className={styles.Loading}>loading worklet...</div>;\n  }\n\n  return (\n    <>\n      <Row>\n        <Col>\n          The goal if this demo is to emulate the following SuperCollider code\n          using the webaudio api\n          <pre className={styles.pre}>\n            <code className={styles.code}>{scCode}</code>\n          </pre>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Range\n            name=\"gain\"\n            value={gain}\n            min={0}\n            max={1}\n            step={0.001}\n            setter={setGain}\n            presets={[0, 0.3, 0.5, 0.8, 1]}\n          />\n        </Col>\n      </Row>\n      <h2>output of our pulse oscillator after connecting lfo</h2>\n      <Row>\n        <Col>\n          <AnalyserChart analyser={analyserRef.current} chartType=\"waveform\" />\n        </Col>\n        <Col>\n          <AnalyserChart analyser={analyserRef.current} chartType=\"fft\" />\n        </Col>\n      </Row>\n      <h2>lfo output (current pulseWidth value)</h2>\n      <Row>\n        <Col>\n          <AnalyserChart analyser={analyserLfoRef.current} chartType=\"waveform\" />\n        </Col>\n        <Col>\n          <AnalyserChart analyser={analyserLfoRef.current} chartType=\"fft\" />\n        </Col>\n      </Row>\n      <Row>\n        <Col style={{ margin: 20, padding: 20 }}>\n          The demo is currently incomplete/unfinished\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default Demo2;\n","import React, { useState } from 'react';\nimport Col from './col';\nimport GithubCorner from 'react-github-corner';\nimport Row from './row';\nimport * as styles from './app.module.css';\nimport { name as packageName } from '../package.json';\nimport Demo1 from './demo-1';\nimport Demo2 from './demo-2';\n\nconst App = () => {\n  const [demoName, setDemoName] = useState('demo1');\n\n  let demo;\n  if (demoName === 'demo1') {\n    demo = <Demo1 />;\n  } else if (demoName === 'demo2') {\n    demo = <Demo2 />;\n  }\n\n  return (\n    <div className={styles.App}>\n      <Row>\n        <Col>\n          <h1>{packageName}</h1>\n        </Col>\n        <Col style={{ alignSelf: 'center' }}>\n          {['demo1', 'demo2'].map((d) => (\n            <button key={d} disabled={demoName === d} onClick={() => setDemoName(d)}>\n              {d}\n            </button>\n          ))}\n        </Col>\n      </Row>\n      <Row>\n        <Col>{demo}</Col>\n      </Row>\n      <GithubCorner href={`https://github.com/skratchdot/${packageName}`} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}